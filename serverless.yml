service: tutorial
frameworkVersion: '3'

provider:
  name: aws
  region: ${opt:region, 'ap-southeast-1'}
  runtime: nodejs18.x
  memorySize: 512
  logRetentionInDays: 14
  deploymentPrefix: serverless
  # deploymentBucket:
  #   name: com.serverless.${self:provider.region}.deploys
  environment:
    AWS_SNS_ENDPOINT: ${file(./config.${self:custom.stage}.json):AWS_SNS_ENDPOINT, 'sns.${aws:region}.amazonaws.com'}
    SNS_AUDIT_TOPIC: arn:aws:sns:${aws:region}:${aws:accountId}:${self:custom.stage}-AuditTopic

custom:
  stage: ${opt:stage, 'local'}

  # serverless-offline-sns:
  #   port: 4002 # a free port for the sns server to run on
  #   debug: true
  #   accountId: ${aws:accountId}
  #   sns-endpoint: ${self:provider.environment.AWS_SNS_ENDPOINT}

  serverless-offline-watcher:
    - path: 
      - src/**/*.(js|ts)
      command: echo "There were files has modified!"

functions: 
  accountService:
    handler: src/apps/account/app.handler
    events:
      - httpApi:
          method: "*"
          path: /account/{proxy+}

    environment:
      MONGODB_URL: ${file(./config.${self:custom.stage}.json):ACCOUNT_MONGODB_URL}

  cmsService:
    handler: src/apps/cms/app.handler
    events:
      - httpApi:
          method: "*"
          path: /cms/{proxy+}
    environment:
      MONGODB_URL: ${file(./config.${self:custom.stage}.json):ACCOUNT_MONGODB_URL}


resources: 
  Resources:
    AuditTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.stage}-AuditTopic

plugins:
  - serverless-plugin-typescript
  - serverless-tscpaths
  - serverless-offline-sns
  - serverless-offline
  - serverless-offline-watcher
