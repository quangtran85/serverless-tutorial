service: tutorial
frameworkVersion: '3'

provider:
  name: aws
  region: ${opt:region, 'ap-southeast-1'}
  runtime: nodejs18.x
  memorySize: 512
  logRetentionInDays: 14
  deploymentPrefix: serverless
  # deploymentBucket:
  #   name: com.serverless.${self:provider.region}.deploys
  httpApi:
    authorizers:
      authorizerFunc:
        type: request
        functionName: authorizerFunc
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'lambda:InvokeFunction'
          Resource:
            - 'arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${self:custom.stage}-accountService'
            - 'arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${self:custom.stage}-authService'

  environment:
    SERVICE_NAME_PREFIX: ${self:service}-${self:custom.stage}
    TOKEN_SECRET: abc@123

custom:
  stage: ${opt:stage, 'local'}

  serverless-offline:
    ignoreJWTSignature: true

  # serverless-offline-sns:
  #   port: 4002 # a free port for the sns server to run on
  #   debug: true
  #   accountId: ${aws:accountId}
  #   sns-endpoint: ${self:provider.environment.AWS_SNS_ENDPOINT}

  serverless-offline-watcher:
    - path: 
      - src/**/*.(js|ts)
      command: echo "There were files has modified!"

functions: 
  accountService:
    handler: src/apps/account/app.handler
    events:
      - httpApi:
          method: "POST"
          path: /account/customers/register
      - httpApi:
          method: "*"
          path: /account/{proxy+}
          authorizer: 
            name: authorizerFunc

    environment:
      MONGODB_URL: ${file(./config.${self:custom.stage}.json):ACCOUNT_MONGODB_URL}

  authService:
    handler: src/apps/auth/app.handler
    events:
      - httpApi:
          method: "POST"
          path: /auth/login
      - httpApi:
          method: "*"
          path: /auth/{proxy+}
          authorizer: 
            name: authorizerFunc
    environment:
      MONGODB_URL: ${file(./config.${self:custom.stage}.json):AUTH_MONGODB_URL}

  authorizerFunc:
    handler: src/apps/auth/handlers/authorizer.handler
    timeout: 60
    environment:
      MONGODB_URL: ${file(./config.${self:custom.stage}.json):AUTH_MONGODB_URL}

resources: 
  Resources:
    AuditTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.stage}-AuditTopic

plugins:
  - serverless-plugin-typescript
  - serverless-tscpaths
  - serverless-offline-sns
  - serverless-offline
  - serverless-offline-watcher
